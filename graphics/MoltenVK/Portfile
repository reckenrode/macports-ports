# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           github 1.0
PortGroup           xcode 1.0
PortGroup           xcodeversion 1.0

github.setup        KhronosGroup MoltenVK 1.1.7 v

name                MoltenVK
revision            1

set submodules {
                    KhronosGroup Vulkan-Headers 1dace16d8044758d32736eb59802d171970e9448 Vulkan-Headers
                    KhronosGroup SPIRV-Cross 131278458ea8eebe6a6e9c476fbcf71278726e1a SPIRV-Cross
                    KhronosGroup glslang 2742e959347ae2fac58acd0d022c92a0ff1f24bf glslang
                    KhronosGroup SPIRV-Tools 45dd184c790d6bfc78a5a74a10c37e888b1823fa glslang/External/spirv-tools
                    KhronosGroup SPIRV-Headers b42ba6d92faf6b4938e6f22ddd186dbdacc98d78 glslang/External/spirv-tools/external/spirv-headers
                    KhronosGroup Vulkan-Tools bb32aa13d4920261b5086219028ef329605d0126 Vulkan-Tools
}
checksums           MoltenVK-${version}.tar.gz \
                    rmd160  ce67c5de59a993edce2270c922a8d11bf25c8a23 \
                    sha256  4d42a28a199110a1cee7c350e279af302d9f1e2c325e3842a27725471ceab265 \
                    size    1021650 \
                    Vulkan-Headers-1dace16d8044758d32736eb59802d171970e9448.tar.gz \
                    rmd160  16f5e056b69c79843cfee68f14631ee9ef01196a \
                    sha256  fee49cd5125361612a60489d5ec7a98c8a6feae9a4a40983238fdd5dcbf3660c \
                    size    1423246 \
                    SPIRV-Cross-131278458ea8eebe6a6e9c476fbcf71278726e1a.tar.gz \
                    rmd160  4e3ed01ce03ad7e8d67dfb511dca0c91ca21bd34 \
                    sha256  5523d0a14a1bcde38ae791b003960d4c7625ca14abcfced4b37fea684a5acf91 \
                    size    1562162 \
                    glslang-2742e959347ae2fac58acd0d022c92a0ff1f24bf.tar.gz \
                    rmd160  c8e1d5618737564d32237154c6f8f4a61f1a2fc4 \
                    sha256  01fd166ae1f536fc56c6c035b73a705e4f20b1645212d4bb3d75e34f487a3e0b \
                    size    3534031 \
                    SPIRV-Tools-45dd184c790d6bfc78a5a74a10c37e888b1823fa.tar.gz \
                    rmd160  88dba7783ba75a821f9ad5bc60d0a424864c9d30 \
                    sha256  2787de3b225e0b99f705f08f656b92cfceff71b7280e534c36ed04fec65463ea \
                    size    2909527 \
                    SPIRV-Headers-b42ba6d92faf6b4938e6f22ddd186dbdacc98d78.tar.gz \
                    rmd160  0afa9e4c19280b627580bf418d42ae24e4243e94 \
                    sha256  d58e8e65ea4b4f1e421caaad68f88ce7b713ac3519bd49e7b71b6a5690489eb6 \
                    size    417927 \
                    Vulkan-Tools-bb32aa13d4920261b5086219028ef329605d0126.tar.gz \
                    rmd160  c1e11f0f4ce8be9da8b80a97849917f0dba1f2c3 \
                    sha256  710edef67c36f427c45c1b52329f2d07a8c35d73480e749dcb615df3f61b37a7 \
                    size    859835

categories          graphics
maintainers         {ryandesign @ryandesign} openmaintainer
license             Apache-2

# MoltenVK would build for i386, but it uses Metal which only works on x86_64.
supported_archs     x86_64 arm64

description         an implementation of Vulkan for Metal

long_description    ${name} is an implementation of the high-performance, \
                    industry-standard Vulkan graphics and compute API, that \
                    runs on Apple's Metal graphics framework.

master_sites        ${master_sites}:${name}
distfiles           ${distfiles}:${name}

patchfiles          dontUpdateDependencies.patch

foreach {sub_author sub_project sub_commit sub_dest} ${submodules} {
    master_sites-append https://github.com/${sub_author}/${sub_project}/archive/${sub_commit}.tar.gz?dummy=:${sub_project}
    distfiles-append    ${sub_project}-${sub_commit}.tar.gz:${sub_project}
}

post-extract {
    ln -s {*}[glob -directory ${workpath} -tails ${github.author}-${github.project}-*] ${worksrcpath}
    set bad_submodule no
    foreach {sub_author sub_project sub_commit sub_dest} ${submodules} {
        set commit_file ${worksrcpath}/ExternalRevisions/${sub_project}_repo_revision
        if {[file exists ${commit_file}]} {
            set commit_re {^(\S+)}
        } else {
            set commit_file ${worksrcpath}/External/glslang/known_good.json
            set commit_re "\"subrepo\" : \"${sub_author}/${sub_project}\".*?\"commit\" : \"(\[^\"\]+)\""
        }
        set fp [open ${commit_file} r]
        set commit_file_data [read ${fp}]
        close ${fp}
        regexp ${commit_re} ${commit_file_data} -> commit
        if {${commit} ne ${sub_commit}} {
            set bad_submodule yes
            set submodules [string map "${sub_commit} ${commit}" ${submodules}]
        }
        file mkdir [file dirname ${worksrcpath}/External/${sub_dest}]
        ln -s {*}[glob ${workpath}/${sub_project}-*] ${worksrcpath}/External/${sub_dest}
    }
    if {${bad_submodule}} {
        ui_error "The submodules should be:\n${submodules}"
        return -code error "incorrect submodule commit"
    }
}

# Required to set up the build environment.
configure {
    system -W ${worksrcpath} "./fetchDependencies --none"
    # Versions of Cereal before 1.3 have several CVEs.  Use a newer version from MacPorts instead.
    xinstall -d -m 700 ${worksrcpath}/External/cereal/include
    ln -s ${prefix}/include/cereal ${worksrcpath}/External/cereal/include
}

depends_build-append \
                    path:bin/python3:python310 \
                    port:cereal

patch.pre_args      -p1

if [variant_isset universal] {
    build.env-append    ARCHS=\"${configure.universal_archs}\"
} else {
    build.env-append    ARCHS=${configure.build_arch}
}

build.pre_args     -derivedDataPath ./DerivedData

compiler.cxx_standard 2017

xcode.configuration Release
xcode.project       MoltenVKPackaging.xcodeproj
xcode.scheme        "MoltenVK Package (macOS only)"


pre-build {
    set xcode_project_arg [xcode::get_project_arg ExternalDependencies.xcodeproj]
    set xcode_configuration_arg [xcode::get_configuration_arg Release]
    set xcode_build_args [xcode::get_build_args]
    set xcode_install_path_setting \
        [xcode::get_install_path_setting ${xcode.destroot.path} ${xcode.destroot.type}]

    system "echo ${build.dir}"
    xcode::build_one_target \
        "${xcode_project_arg} -scheme ExternalDependencies-macOS ${xcode_configuration_arg}" \
        "${xcode_install_path_setting} ${xcode_build_args} ${xcode.build.settings}"

    system -W ${worksrcpath} "
        xcFrameworkStaging=External/build/Intermediates/XCFrameworkStaging
        for target in glslang SPIRVTools SPIRVCross; do
        xcodebuild -create-xcframework \
            -output External/build/Release/\$target.xcframework \
            -library \$xcFrameworkStaging/Release/Platform/lib\$target.a
        done
        ln -s Release External/build/Latest
    "
}

destroot {
    set output_dir ${worksrcpath}/build/${xcode.configuration}
    copy ${output_dir}/MoltenVKShaderConverter ${destroot}${prefix}/bin
    copy ${output_dir}/dynamic/libMoltenVK.dylib ${destroot}${prefix}/lib
    copy ${worksrcpath}/Package/Latest/MoltenVK/MoltenVK.xcframework ${destroot}${frameworks_dir}
}

minimum_xcodeversions   {16 9}

platform darwin {
    if {${os.major} < 16} {
        archive_sites
        distfiles
        depends_build
        known_fail  yes
        pre-fetch {
            ui_error "${subport} @${version} requires macOS Sierra or later"
            return -code error "incompatible OS X version"
        }
    }
}

variant dxvk description {Apply patches to improve compatability with DXVK} {
    patchfiles-append   dxvk.patch
}
